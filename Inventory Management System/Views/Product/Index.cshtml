@model List<Product>

@{
    ViewData["Title"] = "Products";
}

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Product List</h4>
            <h6>Manage your products</h6>
        </div>
        <div class="page-btn">
            <a class="btn btn-added" asp-controller="Product" asp-action="Create"><img src="~/assets/img/icons/plus.svg" alt="img" class="me-1">Add New Product</a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-top">
                <div class="search-set">
                    <div class="search-path">
                        <a class="btn btn-filter" id="filter_search">
                            <img src="~/assets/img/icons/filter.svg" alt="img">
                            <span><img src="~/assets/img/icons/closes.svg" alt="img"></span>
                        </a>
                    </div>
                    <div class="search-input">
                        <a class="btn btn-searchset"><img src="~/assets/img/icons/search-white.svg" alt="img"></a>
                    </div>
                </div>
            </div>

            <div class="card mb-0" id="filter_inputs">
                <div class="card-body pb-0">
                    <div class="row">
                        <div class="col-lg-12 col-sm-12">
                            <div class="row">
                                <form method="get" asp-action="Index">
    <div class="row align-items-end">
        <div class="col-lg-4 col-md-6">
            <div class="form-group">
                <label>Category</label>
                <select name="categoryId" class="select">
                    <option value="">Choose Category</option>
                    @foreach (var category in (SelectList)ViewBag.Categories)
                    {
                        if (category.Selected)
                        {
                            @:<option value="@category.Value" selected>@category.Text</option>
                        }
                        else
                        {
                            @:<option value="@category.Value">@category.Text</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="col-lg-4 col-md-6">
            <div class="form-group">
                <label>Brand</label>
                <select name="brandId" class="select">
                    <option value="">Choose Brand</option>
                    @foreach (var brand in (SelectList)ViewBag.Brands)
                    {
                        if (brand.Selected)
                        {
                            @:<option value="@brand.Value" selected>@brand.Text</option>
                        }
                        else
                        {
                            @:<option value="@brand.Value">@brand.Text</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="col-lg-2 col-md-12">
            <div class="form-group">
                <button type="submit" class="btn btn-primary w-100">
                    <img src="~/assets/img/icons/search-whites.svg" alt="Search" style="width: 16px; height: 16px;">
                    Search
                </button>
            </div>
        </div>
    </div>
</form>

                                <div class="col-lg col-sm-6 col-12 ">

                                </div>
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table  datanew">
                    <thead>
                        <tr>
                            <th>
                                <label class="checkboxs">
                                    <input type="checkbox" id="select-all">
                                    <span class="checkmarks"></span>
                                </label>
                            </th>
                            <th>Product Name</th>
                            <th>SKU</th>
                            <th>Category </th>
                            <th>Brand</th>
                            <th>price</th>
                            <th>Qty</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>
                                    <label class="checkboxs">
                                        <input type="checkbox" value="@product.Id" />
                                        <span class="checkmarks"></span>
                                    </label>
                                </td>
                                <td class="productimgname">
                                    <a href="javascript:void(0);" class="product-img">
                                        <img src="@(
                                            product.ProductImages != null && product.ProductImages.Any()
                                            ? Url.Content($"/assets/img/product/{product.ProductImages.First().Image}")
                                            : Url.Content("~/assets/img/product/product-default.png")
                                        )" alt="@product.Name" />
                                    </a>
                                    <a href="javascript:void(0);">@product.Name</a>
                                </td>
                                <td>@product.SKU</td>
                                <td>@product.Category?.Name</td>
                                <td>@product.Brand?.Name</td>
                                <td>@product.Price.ToString("F2")</td>
                                <td>@product.Quantity</td>
                                <td>
                                    <a class="me-3" asp-controller="Product" asp-action="Details" asp-route-id="@product.Id">
                                        <img src="~/assets/img/icons/eye.svg" alt="View" />
                                    </a>
                                    <a class="me-3" asp-controller="Product" asp-action="Update" asp-route-id="@product.Id">
                                        <img src="~/assets/img/icons/edit.svg" alt="Edit" />
                                    </a>
                                    <a href="javascript:void(0);" class="confirm-text" data-id="@product.Id">
                                        <img src="~/assets/img/icons/delete.svg" alt="Delete" />
                                    </a>

                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
                <form id="deleteForm" method="post" asp-controller="Product" asp-action="Delete" style="display:none">
                    @Html.AntiForgeryToken()
                </form>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script src="~/assets/plugins/owlcarousel/owl.carousel.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".confirm-text").forEach(button => {
                button.addEventListener("click", function () {
                    const productId = this.getAttribute("data-id");

                    Swal.fire({
                        title: 'Are you sure?',
                        text: "This product will be permanently deleted!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/Product/Delete/${productId}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'RequestVerificationToken': getAntiForgeryToken()
                                }
                            })
                                .then(response => {
                                    if (response.ok) {
                                        Swal.fire('Deleted!', 'Product has been deleted.', 'success')
                                            .then(() => {
                                                window.location.reload();
                                            });
                                    } else {
                                        Swal.fire('Error!', 'Failed to delete product.', 'error');
                                    }
                                })
                                .catch(() => {
                                    Swal.fire('Error!', 'Failed to delete product.', 'error');
                                });
                        }
                    });
                });
            });
        });

        function getAntiForgeryToken() {
            const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
            return tokenElement ? tokenElement.value : '';
        }
    </script>
}