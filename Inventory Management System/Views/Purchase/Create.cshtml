@model CreatePurchaseViewModel

@{
    ViewBag.Title = "Create Purchase";
}

@section Styles {
    <link rel="stylesheet" href="~/assets/css/bootstrap-datetimepicker.min.css" />
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
}

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Create Purchase</h4>
            <h6>Enter purchase details below</h6>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <form asp-action="Create" method="post">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-lg-3 col-sm-6 col-12">
                        <div class="form-group">
                            <label>Purchase Date</label>
                            <div class="input-groupicon">
                                <input type="text" name="PurchaseDate" class="form-control datetimepicker" placeholder="Choose Date" />
                                <a class="addonset">
                                    <img src="~/assets/img/icons/calendars.svg" alt="calendar" />
                                </a>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-sm-6 col-12">
                        <div class="form-group">
                            <label>Supplier</label>
                            <input type="text" name="SupplierName" class="form-control" placeholder="Enter supplier name" />
                        </div>
                    </div>


                    <div class="col-lg-6 col-sm-12 col-12">
                        <div class="form-group">
                            <label>Reference</label>
                            <input type="text" name="Reference" class="form-control" placeholder="Enter reference" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 col-sm-12 col-12">
                        <div class="form-group">
                            <label>Add Product</label>
                            <div class="input-groupicon">
                                <input type="text" id="productSearch" placeholder="Search product..." class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive mb-3">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Product</th>
                                <th>QTY</th>
                                <th>Unit Cost</th>
                                <th>Subtotal</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="purchaseItems">
                            <!-- Dynamic rows -->
                        </tbody>
                    </table>
                </div>

                <div class="row">
                    <div class="col-lg-3 col-sm-6 col-12">
                        <div class="form-group">
                            <label>Grand Total</label>
                            <input type="text" name="TotalCost" class="form-control" readonly />
                        </div>
                    </div>
                </div>

                <div class="col-lg-12">
                    <button type="submit" class="btn btn-submit me-2">Submit</button>
                    <a href="@Url.Action("Index", "Purchase")" class="btn btn-cancel">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/moment.min.js"></script>
    <script src="~/assets/js/bootstrap-datetimepicker.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

    <script>
        let purchaseItemIndex = 0;

        function addProductRow(product) {
            const row = `
                        <tr>
                            <td>${purchaseItemIndex + 1}</td>
                            <td>
                                <input type="hidden" name="PurchaseItems[${purchaseItemIndex}].ProductId" value="${product.id}" />
                                <input type="text" class="form-control" value="${product.name}" readonly />
                            </td>
                            <td>
                                <input type="number" class="form-control qty" name="PurchaseItems[${purchaseItemIndex}].Quantity" value="1" min="1" onchange="updateSubtotal(this)" />
                            </td>
                            <td>
                                        <input type="number" class="form-control unit-cost" name="PurchaseItems[${purchaseItemIndex}].UnitCost" value="${product.cost}" step="0.01" onchange="updateSubtotal(this)" />
                            </td>
                            <td class="subtotal">${product.cost.toFixed(2)}</td>
                            <td>
                                <button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">X</button>
                            </td>
                        </tr>
                    `;

            $('#purchaseItems').append(row);
            purchaseItemIndex++;
            updateAllSubtotals();
        }

        function removeRow(btn) {
            $(btn).closest('tr').remove();
            updateAllSubtotals();
        }

        function updateSubtotal(el) {
            const row = $(el).closest('tr');
            const qty = parseFloat(row.find('.qty').val()) || 0;
            const unitCost = parseFloat(row.find('.unit-cost').val()) || 0;
            const subtotal = qty * unitCost;
            row.find('.subtotal').text(subtotal.toFixed(2));
            updateAllSubtotals();
        }

        function updateAllSubtotals() {
            let total = 0;
            $('#purchaseItems tr').each(function () {
                const subtotal = parseFloat($(this).find('.subtotal').text()) || 0;
                total += subtotal;
            });
            $('input[name="TotalCost"]').val(total.toFixed(2));
        }

        $(function () {
            $("#productSearch").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("SearchProducts", "Product")',
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.name,
                                    value: item.name,
                                    id: item.id,
                                    name: item.name,
                                    cost: item.price 
                                };
                            }));
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    addProductRow(ui.item);
                    $('#productSearch').val('');
                    return false;
                }
            });
        });
    </script>
}
